plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

android {
    namespace = "com.wmstudios.blossom"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    defaultConfig {
        applicationId = "com.wmstudios.blossom"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        //multiDexEnabled = true  // Add multidex support
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
            minifyEnabled false
            shrinkResources false
        }
        debug {
            // Debug configuration
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
}

// Define tasks AFTER flutter and dependencies blocks
tasks.register("copyDebugApk", Copy) {
    from "${buildDir}/outputs/apk/debug"
    into "../../build/app/outputs/flutter-apk"
    include "*.apk"
}

tasks.register("copyReleaseApk", Copy) {
    from "${buildDir}/outputs/apk/release" 
    into "../../build/app/outputs/flutter-apk"
    include "*.apk"
}

// Use afterEvaluate to ensure tasks exist before configuring them
afterEvaluate {
    tasks.named("assembleDebug").configure {
        finalizedBy "copyDebugApk"
    }
    
    tasks.named("assembleRelease").configure {
        finalizedBy "copyReleaseApk"
    }
}
